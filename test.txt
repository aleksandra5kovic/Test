Teorijski deo
---

Dati sto konciznije odgvore u formi prosto prosirenih recenica na svako od sledecih pitanja.

01. Sta je to JSON?
*JavaScript Object Notation - sintaksa za cuvanje i razmenu podataka. Veoma cest format koji se koristi za komunikaciju izmedju pregledaca i servera

02. Sta je to XML?
*Extensible Markup Language - je markup jezik koji definise niz pravila za enkodovanje elemenata u formatu koji je citljiv i ljudima i masinama.

03. Sta je to URL?
*Uniforme Resource Locator - predstavlja web adresu.

04. Sta je to HTTP?
* Hyper Text Transfer ProtoCol - je protokol za komunikaciju. Koristi se za slanje i primanje web stranica i fajlova na internetu. 

05. Sta je to RESTful API?
* Predstavlja API (application program interface) koji kortisti HTTP zahteve: GET, PUT, POST i DELETE za obradu podataka

06. Koje HTTP metode imamo?
*GET, POST, HEAD, PUT, DELETE, OPTIONS, CONNECT

07. Sta je to DNS?
*Domain Name System - Internet sistem koji konvertuje slova u numericke IP adrese.

08. Sta je to private IP?
*Privatna IP adresa je nasa kucna IP adresa (192.168.0.0) koja nije dostupna nikom drugom osim nama (eventualno nasem provajderu)

09. Sta je to AJAX?
* Asynchronous JavaScript and XML - je metod gradjenja inteaktivne aplikacije za Web koja odmah procesira korisnikov zahtev.

10. Sta je to TCP/IP?
* Transmission Control Protocol/ Internet Protocol - predstavlja skup komunikacionih protokola koji se koriste za medjusobno povezivanje mreznih uredjaja na internetu.

11. Sta je to kes memorija?
* Najbrza vrsta memorije, ugradjena u maticnu plocu.

12. Koja je razlika izmedju klase i objekta?
* Objekat je instanca neke klase. Klasa moze sadrzati objekat,a objekat ne moze sadrzati klasu.

Backend
---

1. U `models.py` fajlu implementirati `Comment` model (klasu) u Python-u koja sadrzi atribute:
- `text`: sam komentar, i
- `date`: datum komentara u formatu `YYYY-MM-DD`
"Override"-ovati `__repr__` metod.

2. U `models.py` fajlu definisati `COMMENTS` varijablu koja sadrzi niz od 3 elementa koji su tipa `Comment`. 

3. U `app.py` fajlu napraviti Flask applikaciju koja ima `index` "view" funkciju koja handle-uje `/` route. Funkcija bi trebalo da vraca HTML string koji u `body`-ju sadrzi heading "Welcome!".

4. U `app.py` dodati `comments` "view" funkciju koja handle-uje `/comments` route. Funkcija bi trebalo da vraca HTML koji u `body`-ju sadrzi tabelu komentara. Koristiti Flask template.

5.  U `app.py` dodati `api_comments` "view" funkciju koja handle-uje `/api/v1.0/comments` route. Funkcija bi trebalo da vraca JSON reprezentaciju `COMMENTS` niza.

Frontend
---

U `home.html` fajlu imlementirati jednostavnu klijent aplikaciju kojom moze da testira prethodno implementirani API end point. Koristiti `form` i `iframe`.

Algoritmi
---

Napisati i JavaScript i Python funkciju koja predstavlja resenje sledeceg zadataka:

Write a program that prints the numbers from 1 to 100. But for multiples of three print `Fizz` instead of the number and for the multiples of five print `Buzz`. For numbers which are multiples of both three and five print `FizzBuzz`.

Uputstvo
---

Resenja i odgovore predati u okviru GitHub repozitorijuma.